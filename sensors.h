#ifndef _SENSORS_H_
#define _SENSORS_H_

#include "nrf_drv_saadc.h"
#include "nrf_drv_ppi.h"
#include "nrf_gpio.h"
#include "nrf_gpiote.h"
#include "nrf_drv_gpiote.h"
#include "app_util_platform.h"



#define RESISTOR 46500
#define MAX_ADC_VAL 4096 
#define MAX_OUTPUT_VAL 500000
#define DIVISION_CONSTANT 10 // MAX_OUTPUT_VAL/DIVISION_CONSTANT MUST BE BELOW uint16 (65535)

#define BUTT_ROW_SIZE 3
#define BUTT_COL_SIZE 3

#define BACK_ROW_SIZE 2
#define BACK_COL_SIZE 2
#define BACK_START_MUX 3

//Global Circular Buffer for averaging sensor readings
#define CIRCULAR_BUFFER_SIZE 16
#define NUM_BUTT_SENSORS 9
#define NUM_BACK_SENSORS 4
#define NUM_SIM_DATA 5
#define NUM_MUX_OUTPUTS 5
#define NUM_MUX_PINS 3


//Simulate some fake pressure data for the two classes

    uint8_t simButt[5][18]           = {{0x12, 0x34, 0x56, 0x78, 0x90, 0xCA,0xFE, 0xF0, 0x0D, 0xC0, 0xFF, 0xEE, 0xBE, 0xEF, 0x87, 0x65, 0x43, 0x21},\
                                    {0x12, 0x34, 0x56, 0x78, 0x90, 0xCA,0xFE, 0xF0, 0x0D, 0xC0, 0xFF, 0xEE, 0xBE, 0xEF, 0x87, 0x65, 0x43, 0x21},\
                            {0x12, 0x34, 0x56, 0x78, 0x90, 0xCA,0xFE, 0xF0, 0x0D, 0xC0, 0xFF, 0xEE, 0xBE, 0xEF, 0x87, 0x65, 0x43, 0x21},\
                            {0x12, 0x34, 0x56, 0x78, 0x90, 0xCA,0xFE, 0xF0, 0x0D, 0xC0, 0xFF, 0xEE, 0xBE, 0xEF, 0x87, 0x65, 0x43, 0x21},\
                            {0x12, 0x34, 0x56, 0x78, 0x90, 0xCA,0xFE, 0xF0, 0x0D, 0xC0, 0xFF, 0xEE, 0xBE, 0xEF, 0x87, 0x65, 0x43, 0x21}};\


    uint8_t simBack[5][8]           = {{0x12,0x34,0x56,0x78,0x90,0x00,0x13,0x37},\
                                        {0x12,0x34,0x56,0x78,0x90,0x00,0x13,0x37},\
                                        {0x12,0x34,0x56,0x78,0x90,0x00,0x13,0x37},\
                                        {0x12,0x34,0x56,0x78,0x90,0x00,0x13,0x37},\
                                        {0x12,0x34,0x56,0x78,0x90,0x00,0x13,0x37}};





void select_mux(uint8_t output);
void select_back_col(uint8_t output);
void select_butt_col(uint8_t output);

void sensors_init();
void saadc_init();


uint16_t buttBuffer[CIRCULAR_BUFFER_SIZE][9] = {0};

uint16_t backBuffer[CIRCULAR_BUFFER_SIZE][4] = {0};

uint32_t muxPins[NUM_MUX_PINS] = {11,12,13};

uint32_t backColPins[BACK_COL_SIZE] = {22,23}; 

uint32_t buttColPins[BUTT_COL_SIZE] = {14,15,16};


void get_butt_matrix(uint16_t outputmatrix[BUTT_ROW_SIZE*BUTT_COL_SIZE]);
void get_back_matrix(uint16_t outputmatrix[BACK_ROW_SIZE*BACK_COL_SIZE]);

#endif //_SENSORS_H_
